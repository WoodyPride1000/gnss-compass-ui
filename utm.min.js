// utm.js - Pure JavaScript UTM <=> Lat/Lon conversion (WGS84 only)

const UTM = (() => {
  const a = 6378137.0; // WGS84 major axis
  const f = 1 / 298.257223563;
  const k0 = 0.9996;
  const e = Math.sqrt(f * (2 - f));
  const e1sq = e * e / (1 - e * e);

  function fromLatLon(lat, lon) {
    const zoneNum = Math.floor((lon + 180) / 6) + 1;
    const λ0 = ((zoneNum - 1) * 6 - 180 + 3) * Math.PI / 180;
    const φ = lat * Math.PI / 180;
    const λ = lon * Math.PI / 180;

    const N = a / Math.sqrt(1 - Math.pow(e * Math.sin(φ), 2));
    const T = Math.pow(Math.tan(φ), 2);
    const C = e1sq * Math.pow(Math.cos(φ), 2);
    const A = Math.cos(φ) * (λ - λ0);

    const M = a * ((1 - e * e / 4 - 3 * e ** 4 / 64 - 5 * e ** 6 / 256) * φ
      - (3 * e ** 2 / 8 + 3 * e ** 4 / 32 + 45 * e ** 6 / 1024) * Math.sin(2 * φ)
      + (15 * e ** 4 / 256 + 45 * e ** 6 / 1024) * Math.sin(4 * φ)
      - (35 * e ** 6 / 3072) * Math.sin(6 * φ));

    const easting = k0 * N * (A + (1 - T + C) * A ** 3 / 6 + (5 - 18 * T + T ** 2 + 72 * C - 58 * e1sq) * A ** 5 / 120) + 500000;
    let northing = k0 * (M + N * Math.tan(φ) * (A ** 2 / 2 + (5 - T + 9 * C + 4 * C ** 2) * A ** 4 / 24 + (61 - 58 * T + T ** 2 + 600 * C - 330 * e1sq) * A ** 6 / 720));
    if (lat < 0) northing += 10000000;

    return { easting, northing, zoneNum, zoneLetter: getZoneLetter(lat) };
  }

  function getZoneLetter(lat) {
    if (lat >= 84 || lat < -80) return 'Z';
    const letters = 'CDEFGHJKLMNPQRSTUVWX';
    return letters[Math.floor((lat + 80) / 8)];
  }

  return { fromLatLon };
})();
